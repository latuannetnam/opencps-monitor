template CheckCommand "centreon-check-template" {
    import "plugin-check-command"
    command = [
        PluginDir + "/thirdparty/centreon-plugins/centreon_plugins.pl"
    ]
    arguments += {
        "--mode" = {
            required = true
            value = "$mode$"
        }
        "--plugin" = {
            required = true
            value = "$plugin$"
        }
    }
}

template CheckCommand "check_jmx_template" {
    import "plugin-check-command"
    command = [ PluginDir + "/thirdparty/nagios-jmx-plugin/check_jmx" ]
    arguments += {
        "-A" = "$attribute_name$"
        "-K" = "$compound_key$"
        "-O" = "$object_name$"
        "-U" = "service:jmx:rmi:///jndi/rmi://127.0.0.1:$jmx_port$/jmxrmi"
    }
    vars.jmx_port=10000
}

template CheckCommand "check_oracle_health_template" {
    import "plugin-check-command"
    command = [
        PluginDir + "/thirdparty/oracle/check_oracle_health"
    ]
    arguments += {
	"--connect" = {
	   required = true
            value = "$oracle_database$"	
	}
        "--user" = {
           required = true
            value = "$oracle_user$"
        }

	"--password" = {
           required = true
            value = "$oracle_password$"
        }
       
        "--warning" = "$oracle_warning$"
        "--critical" = "$oracle_critical$"
 

        "--mode" = {
            required = true
            value = "$oracle_mode$"
        }

    }
}


template CheckCommand "check_mssql_health_template" {
    import "plugin-check-command"
    command = [
        PluginDir + "/thirdparty/mssql/check_mssql_health"
    ]
    arguments += {
        "--commit" = {
            required = true
        }

        "--hostname" = {
           required = true
            value = "$mssql_hostname$"
        }
        "--username" = {
           required = true
            value = "$mssql_user$"
        }

        "--password" = {
           required = true
            value = "$mssql_password$"
        }

        "--mode" = {
            required = true
            value = "$mssql_mode$"
        }
       
        "--warning" = "$mssql_warning$"
        "--critical" = "$mssql_critical$"
        

    }
}

/*
template CheckCommand "check_mssql_perf_template" {
    import "plugin-check-command"
    import "check_mssql_health_template"
    vars.mssql_mode = "sql"
    arguments += {
        "--name" = {
            required = true
	    value = "SELECT cntr_value FROM  sys.dm_os_performance_counters WHERE counter_name  =  '$mssql_counter_name$' and object_name = '$mssql_object_name$' and instance_name= '$mssql_instance_name$'"		
        }
        
        "--name2" = {
            required = true
            value = "$mssql_metric$"
        }
    }

    vars.mssql_instance_name = ""
}
*/

/*
template CheckCommand "check_mssql_sql_template" {
    import "plugin-check-command"
    import "check_mssql_health_template"
    vars.mssql_mode = "sql"
    arguments += {
        "--name" = "$mssql_sql$"
	"--name2" = "$mssql_metric$"
    }
}
*/


template CheckCommand "check_linux_stats_template" {
    import "plugin-check-command"
    command = [ PluginDir + "/check_linux_stats.pl" ]
}

template CheckCommand "check_proxmox_template" {
    import "plugin-check-command"
    command = [
        PluginDir + "/thirdparty/pve-monitor/pve-monitor.pl"
    ]
    arguments += {
        "--conf" = {
            required = true
            value = "/etc/icinga2/proxmox/" + "$pve_monitor_conf$"
        }
    }
    vars.pve_monitor_conf = "proxmox-rd.conf"
}

template CheckCommand "check_websphere_perf_template" {
    import "plugin-check-command"
    command = [
        PluginDir + "/thirdparty/websphere/perfservmon.py",
        "-C $was_cell_name$",
        "show"
    ]
    arguments += {
       
       "-n" = {
           required = true
           value = "$was_node_name$"
        }
      
       "-s" = {
           required = true
           value = "$was_server_name$"
        }

       "-M" = {
           required = true
           value = "$was_metric$"
        }
      
       "-d" = {
           value = "$was_destination$"
        }
  
       "-j" = {
           value = "$was_jndi_name$"
        }
      
       "-w" = {
           value = "$was_warning$"
        }

       "-c" = {
           required = true
           value = "$was_critical$"
        }
    }
}
    

