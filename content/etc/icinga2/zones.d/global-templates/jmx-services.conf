apply Service "jmx_heapmemory_" for (compound_key in JMXHeapMemoryUsage){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "java.lang:type=Memory"
    vars.attribute_name = "HeapMemoryUsage"
    vars.compound_key = compound_key
    assign where "JMX" in host.vars.server_types
}

apply Service "jmx_nonheapmemory_" for (compound_key in JMXHeapMemoryUsage){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "java.lang:type=Memory"
    vars.attribute_name = "NonHeapMemoryUsage"
    vars.compound_key = compound_key
    assign where "JMX" in host.vars.server_types
}

apply Service "jmx_threading_" for (attribute_name in JMXThreading){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "java.lang:type=Threading"
    vars.attribute_name = attribute_name
    assign where "JMX" in host.vars.server_types
}

apply Service "jmx_classloading_" for (attribute_name in JMXClassLoading){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "java.lang:type=ClassLoading"
    vars.attribute_name = attribute_name
    assign where "JMX" in host.vars.server_types
}

apply Service "jmx_garbagecollector_psmarksweep_" for (attribute_name in JMXGarbageCollector_PSMarkSweep){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "java.lang:type=GarbageCollector,name=PS MarkSweep"
    vars.attribute_name = attribute_name
    assign where "JMX" in host.vars.server_types
}

apply Service "jmx_garbagecollector_psmarksweep_lastgcinfo_" for (compound_key in JMXGarbageCollector_PSMarkSweep_LastGcInfo){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "java.lang:type=GarbageCollector,name=PS MarkSweep"
    vars.attribute_name = "LastGcInfo"
    vars.compound_key = compound_key
    assign where "JMX" in host.vars.server_types
}

apply Service "jmx_garbagecollector_psscavenge_" for (attribute_name in JMXGarbageCollector_PSScavenge){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "java.lang:type=GarbageCollector,name=PS Scavenge"
    vars.attribute_name = attribute_name
    assign where "JMX" in host.vars.server_types
}

apply Service "jmx_garbagecollector_psscavenge_lastgcinfo_" for (compound_key in JMXGarbageCollector_PSScavenge_LastGcInfo){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "java.lang:type=GarbageCollector,name=PS Scavenge"
    vars.attribute_name = "LastGcInfo"
    vars.compound_key = compound_key
    assign where "JMX" in host.vars.server_types
}

apply Service "tomcat_globalrequestprocessor_" for (attribute_name in Tomcat_GlobalRequestProcessor){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "Catalina:name=\"$connector$\",type=GlobalRequestProcessor"
    vars.attribute_name = attribute_name
    assign where "Tomcat" in host.vars.server_types
    vars.connector="http-nio-8080"
}

apply Service "tomcat_threadpool_" for (attribute_name in Tomcat_ThreadPool){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "Catalina:name=\"$connector$\",type=ThreadPool"
    vars.attribute_name = attribute_name
    assign where "Tomcat" in host.vars.server_types
    vars.connector="http-nio-8080"
}

apply Service "liferay_portalmanager_" for (attribute_name in Liferay_PortalManager){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "com.liferay.portal.monitoring:classification=portal_statistic,name=PortalManager"
    vars.attribute_name = attribute_name
    assign where "Liferay" in host.vars.server_types
}

apply Service "liferay_actionrequestportletmanager_" for (attribute_name in Liferay_PortalManager){
    import "generic-client-service"
    check_command = "check_jmx"
    vars.object_name = "com.liferay.portal.monitoring:classification=portlet_statistic,name=ActionRequestPortletManager"
    vars.attribute_name = attribute_name
    assign where "Liferay" in host.vars.server_types
}


